//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table users {
  id String [pk]
  name String
  email String [unique, not null]
  username String
  phone String
  password String
  avatar String
  bio String
  about String
  address String
  city String
  state String
  country String
  zipCode String
  dob DateTime
  governmentID String
  gender Gender
  lattitude Float
  longitude Float
  status UserStatus [not null, default: 'ACTIVE']
  isEmailVerified Boolean [not null, default: false]
  isTwoFactorEnabled Boolean [not null, default: false]
  isSellerVerified Boolean [not null, default: false]
  blockedUntil DateTime
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  stripeAccountId String
  stripeAccountStatus String
  stripeOnboardingComplete Boolean [not null, default: false]
  stripeCustomerId String
  lastLoginAt DateTime
  loginHistory login_history [not null]
  accounts accounts [not null]
  events events [not null]
  bookings bookings [not null]
  reviewsGiven reviews [not null]
  reviewReceived reviews [not null]
  messagesReceived messages [not null]
  messagesSent messages [not null]
  messageRoomsSent message_rooms [not null]
  messageRoomsReceived message_rooms [not null]
  notifications notifications [not null]
  sellerVerification seller_verifications [not null]
  activityLogs activity_log [not null]
  businessInfo business_info
  notificationSettings notifications_settings
  roles user_roles [not null]
  transactionsPaid transactions [not null]
  transactionsReceived transactions [not null]
  transactionsApproved transactions [not null]
  blogs blog [not null]
  interests user_interest [not null]
  withdrawalRequests withdrawal_requests [not null]
  withdrawalApprovals withdrawal_requests [not null]
  feedBacks feedback [not null]
  rewardPoints RewardPoints [not null]
  redemptions Redemption [not null]
  userLoyalty UserLoyalty
  tierHistories TierHistory [not null]
  WishlistItem wishlist_items [not null]
}

Table user_otp {
  id String [pk]
  type OtpType [not null, default: 'VERIFY_EMAIL']
  email String [not null]
  otp String [not null]
  expiresAt DateTime
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (email, type) [unique]
  }
}

Table accounts {
  id String [pk]
  userId String [not null]
  type String [not null]
  provider String [not null]
  providerAccountId String
  refreshToken String
  accessToken String
  expiresAt Int
  user users [not null]
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (provider, providerAccountId) [unique]
  }
}

Table user_roles {
  id String [pk]
  userId String [not null]
  roleId String [not null]
  user users [not null]
  role roles [not null]

  indexes {
    (userId, roleId) [unique]
  }
}

Table roles {
  id String [pk]
  name String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userRoles user_roles [not null]
  rolePermissions role_permissions [not null]
}

Table permissions {
  id String [pk]
  name String [unique, not null]
  group String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  rolePermissions role_permissions [not null]
}

Table role_permissions {
  id String [pk]
  roleId String [not null]
  permissionId String [not null]
  roles roles [not null]
  permissions permissions [not null]

  indexes {
    (roleId, permissionId) [unique]
  }
}

Table login_history {
  id String [pk]
  userId String [not null]
  attempt LoginHistoryStatus [not null, default: 'SUCCESS']
  ip String
  country String
  userAgent String
  createdAt DateTime [default: `now()`, not null]
  user users [not null]
}

Table categorys {
  id String [pk]
  name String [unique, not null]
  slug String [unique, not null]
  icon String
  parentId String
  parent categorys
  children categorys [not null]
  blogs blog [not null]
  interests user_interest [not null]
  status CategoryStatus [not null, default: 'ACTIVE']
  events events [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table user_interest {
  id String [pk]
  user users [not null]
  userId String [not null]
  category categorys [not null]
  categoryId String [not null]

  indexes {
    (userId, categoryId) [unique]
  }
}

Table events {
  id String [pk]
  eventId String [unique, not null]
  title String [not null]
  description String
  venue String
  startTime DateTime [not null]
  endTime DateTime [not null]
  duration Int
  image String
  metadata Json
  status EventStatus [not null, default: 'ONGOING']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  sellerId String [not null]
  seller users [not null]
  seats seats [not null]
  reviews reviews [not null]
  rooms message_rooms [not null]
  transactions transactions [not null]
  categoryId String [not null]
  category categorys [not null]
  WishlistItem wishlist_items [not null]
}

Table seats {
  id String [pk]
  seatId String [not null]
  eventId String [not null]
  price Decimal [not null]
  discount Decimal [not null, default: 0]
  discountType DiscountType [not null, default: 'FIXED']
  row String
  number Int
  section String
  metadata Json
  isBooked Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  event events [not null]
  bookings bookings [not null]

  indexes {
    (seatId, eventId) [unique]
  }
}

Table bookings {
  id String [pk]
  user users [not null]
  userId String [not null]
  seatId String [not null]
  seat seats [not null]
  price Decimal [not null]
  discount Decimal [not null]
  vat Decimal [not null]
  tax Decimal [not null]
  total Decimal [not null]
  status BookingStatus [not null, default: 'PENDING']
  paymentMethod PaymentProvider [not null, default: 'STRIPE']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  deletedAt DateTime
  transactions transactions [not null]
  rooms message_rooms [not null]
}

Table transactions {
  id String [pk]
  type TransactionType [not null]
  status TransactionStatus [not null, default: 'PENDING']
  amount Decimal [not null]
  currency Currency [not null, default: 'USD']
  provider PaymentProvider [not null]
  payer users
  payerId String
  payee users
  payeeId String
  booking bookings
  bookingId String
  event events
  eventId String
  stripePaymentIntent String
  stripeTransferId String
  stripeAccountId String
  stripeChargeId String
  platformFee Decimal
  sellerAmount Decimal
  externalTxnId String
  parentTransaction transactions
  parentTransactionId String
  childTransactions transactions [not null]
  description String
  notes String
  metadata Json
  processedAt DateTime
  settledAt DateTime
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  approvedBy users
  approvedById String
  approvedAt DateTime
  payoutStatus payoutStatus [not null, default: 'NULL']
}

Table reviews {
  id String [pk]
  eventId String [not null]
  event events [not null]
  reviewer users [not null]
  reviewerId String [not null]
  reviewee users [not null]
  revieweeId String [not null]
  rating Int [not null, default: 0]
  title String
  comment String [not null]
  status ReviewStatus [not null, default: 'PENDING']
  createdAt DateTime [default: `now()`, not null]
  replyed String
  repliedAt DateTime
}

Table message_rooms {
  id String [pk]
  sender users [not null]
  senderId String [not null]
  receiver users [not null]
  receiverId String [not null]
  eventId String [not null]
  event events [not null]
  bookingId String
  booking bookings
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  messages messages [not null]

  indexes {
    (senderId, receiverId, eventId) [unique]
  }
}

Table messages {
  id String [pk]
  room message_rooms [not null]
  roomId String [not null]
  sender users [not null]
  senderId String [not null]
  receiver users [not null]
  receiverId String [not null]
  message String [not null]
  attachment String
  type MessageType [not null, default: 'TEXT']
  sentAt DateTime [default: `now()`, not null]
  isRead Boolean [not null, default: false]
}

Table notifications {
  id String [pk]
  user users [not null]
  userId String [not null]
  type NotificationType [not null, default: 'MESSAGE']
  title String [not null]
  link String
  message String [not null]
  image String
  readAt DateTime
  createdAt DateTime [default: `now()`, not null]
}

Table activity_log {
  id String [pk]
  user users
  type String [not null]
  userId String
  action String [not null]
  metadata String
  ipAddress String
  createdAt DateTime [default: `now()`, not null]
}

Table seller_verifications {
  id String [pk]
  seller users [not null]
  sellerId String [not null]
  idDocument String [not null]
  verified Boolean [not null]
  verifiedAt DateTime
}

Table business_info {
  id String [pk]
  sellerId String [unique, not null]
  seller users [not null]
  status BusinessInfoStatus [not null, default: 'PENDING']
  name String
  type String
  description String
  registrationNumber String
  taxvatNumber String
  country String
  businessPhone String
  businessEmail String
  streetAddress String
  city String
  state String
  zipCode String
  address String
  phone String
  email String
  socialLinks String[] [not null]
  isVerified Boolean [not null, default: false]
  documents String[] [not null]
  verifiedAt DateTime
  message String
  verifiedById String
  createdAt DateTime [default: `now()`, not null]
}

Table notifications_settings {
  id String [pk]
  userId String [unique, not null]
  user users [not null]
  newBooking Boolean [not null, default: true]
  bookingcancellation Boolean [not null, default: true]
  bookingreminder Boolean [not null, default: true]
  payoutintiated Boolean [not null, default: true]
  payoutcompleted Boolean [not null, default: true]
  newreview Boolean [not null, default: true]
  eventupdate Boolean [not null, default: true]
  promotionaloffer Boolean [not null, default: true]
  loginnewdevice Boolean [not null, default: true]
  policychange Boolean [not null, default: true]
  securityalert Boolean [not null, default: true]
  updatedAt DateTime [not null]
  createdAt DateTime [default: `now()`, not null]
}

Table blog {
  id String [pk]
  title String [not null]
  slug String [unique, not null]
  content String [not null]
  excerpt String
  coverImage String
  status BlogStatus [not null, default: 'DRAFT']
  tags String[] [not null]
  publishedAt DateTime
  isFeatured Boolean [not null, default: false]
  isDeleted Boolean [not null, default: false]
  authorId String [not null]
  author users [not null]
  categories categorys [not null]
  seo SeoMetadata
  seoId String [unique]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  faq helpfaqs [not null]
}

Table withdrawal_requests {
  id String [pk]
  sellerId String [not null]
  seller users [not null]
  amount Decimal [not null]
  currency Currency [not null, default: 'USD']
  description String
  status WithdrawalRequestStatus [not null, default: 'PENDING']
  requestedAt DateTime [default: `now()`, not null]
  processedAt DateTime
  adminNotes String
  approvedBy users
  approvedById String
  approvedAt DateTime
  stripeTransferId String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table helpfaqs {
  id String [pk]
  question String [not null]
  answer String [not null]
  blog blog
  blogId String
  type HelpType [not null, default: 'OTHER']
  status HelpFaqStatus [not null, default: 'PUBLISHED']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
}

Table feedback {
  id String [pk]
  email String [not null]
  name String [not null]
  message String [not null]
  userId String
  platform PlatformType [not null, default: 'WEB']
  user users
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table WebhookEvent {
  id String [pk]
  stripeEventId String [unique, not null]
  type String [not null]
  status WebhookEventStatus [not null, default: 'PENDING']
  firstSeenAt DateTime [default: `now()`, not null]
  processedAt DateTime
  error String
  payload Json
}

Table hero_section {
  id String [pk]
  title String [not null]
  description String
  sortName String
  image String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table banner {
  id String [pk]
  title String [not null]
  description String
  image String
  isActive Boolean [not null, default: true]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table card {
  id String [pk]
  title String [not null]
  description String
  image String
  isActive Boolean [not null, default: true]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  type CardType [not null, default: 'FEATURED']
}

Table settings {
  id String [pk]
  siteName String [not null]
  siteUrl String [not null]
  siteLogo String
  siteFavicon String
  siteDescription String
  siteKeywords String
  siteEmail String
  sitePhone String
  siteAddress String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table contactinformation {
  id String [pk]
  email String [not null]
  secondaryEmail String
  phone String [not null]
  phoneMessage String
  secondaryPhone String
  address String
  secondaryAddress String
  businessHours String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table testimonial {
  id String [pk]
  name String [not null]
  badgeTitle String
  designation String
  image String
  title String
  description String
  position String
  isActive Boolean [not null, default: true]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table dynamicPage {
  id String [pk]
  title String [not null]
  slug String [unique, not null]
  description String
  image String
  content String
  seo SeoMetadata [not null]
  seoId String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table SeoMetadata {
  id String [pk]
  metaTitle String [not null]
  dynamicPage dynamicPage
  blog blog
  metaDescription String
  metaKeywords String
  robotsIndex Boolean [not null, default: true]
  robotsFollow Boolean [not null, default: true]
  ogTitle String
  ogDescription String
  ogImage String
  ogType String
  ogSiteName String
  structuredData Json
  changefreq ChangeFrequency
  priority Float
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table LoyaltyTier {
  id String [pk]
  name String [unique, not null]
  priority Int [not null]
  minPoints Int [not null]
  durationDays Int [not null]
  benefits Json
  active Boolean [not null, default: true]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userLoyalties UserLoyalty [not null]
}

Table PointRule {
  id String [pk]
  action PointRuleAction [not null]
  name String [not null]
  basePoints Int [not null, default: 0]
  perUnit Boolean [not null, default: false]
  unitAmount Int
  tierMultipliers Json
  expiryMonths Int [not null, default: 12]
  active Boolean [not null, default: true]
  metadata Json
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  rewards RewardPoints [not null]
}

Table RewardPoints {
  id String [pk]
  userId String [not null]
  user users [not null]
  ruleId String
  rule PointRule
  action PointRuleAction [not null]
  points Int [not null]
  remaining Int [not null]
  status RewardPointStatus [not null, default: 'ACTIVE']
  reason String
  earnedAt DateTime [default: `now()`, not null]
  expiresAt DateTime
  referencedId String
  createdAt DateTime [default: `now()`, not null]
}

Table Redemption {
  id String [pk]
  userId String [not null]
  user users [not null]
  points Int [not null]
  rewardCode String
  metadata Json
  createdAt DateTime [default: `now()`, not null]
}

Table UserLoyalty {
  id String [pk]
  userId String [unique, not null]
  user users [not null]
  tierId String
  tier LoyaltyTier
  currentPoints Int [not null, default: 0]
  totalEarned Int [not null, default: 0]
  totalRedeemed Int [not null, default: 0]
  updatedAt DateTime [not null]
}

Table TierHistory {
  id String [pk]
  userId String [not null]
  user users [not null]
  oldTierId String
  newTierId String
  reason String
  createdAt DateTime [default: `now()`, not null]
}

Table ScheduledJobLog {
  id String [pk]
  name String [not null]
  runAt DateTime [default: `now()`, not null]
  status String [not null]
  payload Json
}

Table wishlist_items {
  id String [pk]
  userId String [not null]
  user users [not null]
  eventId String [not null]
  event events [not null]
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (userId, eventId) [unique]
  }
}

Table BlogCategories {
  blogsId String [ref: > blog.id]
  categoriesId String [ref: > categorys.id]
}

Enum AuthProvider {
  GOOGLE
  FACEBOOK
  APPLE
  CREDENTIAL
}

Enum UserStatus {
  ACTIVE
  INACTIVE
  LOCKED
  BLOCKED
  BANNED
  PENDING
  SUSPENDED
  DELETED
}

Enum OtpType {
  EMAIL
  PHONE
  RESET_PASSWORD
  CHANGE_PASSWORD
  TWO_FACTOR
  VERIFY_EMAIL
  VERIFY_PHONE
}

Enum Gender {
  MALE
  FEMALE
  OTHER
}

Enum LoginHistoryStatus {
  SUCCESS
  FAILED
  RESET_PASSWORD
  CHANGE_PASSWORD
}

Enum CategoryStatus {
  ACTIVE
  INACTIVE
}

Enum EventStatus {
  ONGOING
  COMPLETED
  CANCELLED
  RESCHEDULED
}

Enum DiscountType {
  PERCENTAGE
  FIXED
}

Enum payoutStatus {
  NULL
  UNPAID
  PENDING
  PAID
}

Enum TransactionStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
  REJECTED
  CANCELLED
  PARTIALLY_REFUNDED
  FULLY_REFUNDED
  DISPUTED
}

Enum PaymentProvider {
  STRIPE
  STRIPE_CONNECT
  CASH
  WALLET
}

Enum TransactionType {
  BOOKING_PAYMENT
  COUPON_PURCHASE
  SELLER_PAYOUT
  ADMIN_COMMISSION
  BOOKING_REFUND
  COUPON_REFUND
  MANUAL_DEPOSIT
  MANUAL_WITHDRAWAL
  ADJUSTMENT
}

Enum Currency {
  USD
  EUR
  GBP
}

Enum ReviewStatus {
  PENDING
  APPROVED
  REJECTED
}

Enum MessageType {
  TEXT
  IMAGE
  VIDEO
  AUDIO
  FILE
}

Enum NotificationType {
  NOTIFY
  BOOKING
  REVIEW
  MESSAGE
  WISHLIST
  COUPON
  EVENT
  PAYMENT
  SYSTEM
  ALERT
}

Enum BusinessInfoStatus {
  PENDING
  VERIFIED
  REJECTED
}

Enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
  EXPIRED
  REFUNDED
}

Enum BlogStatus {
  DRAFT
  PUBLISHED
}

Enum WithdrawalRequestStatus {
  PENDING
  APPROVED
  REJECTED
  PROCESSING
  COMPLETED
  FAILED
}

Enum HelpFaqStatus {
  DRAFT
  REVIEW
  PUBLISHED
  ARCHIVED
  QUESTIONS
}

Enum HelpType {
  BOOKING
  PAYMENT
  EVENT
  ACCOUNT
  COUPON
  REVIEW
  MESSAGE
  NOTIFICATION
  SYSTEM
  GENERAL
  SELLER
  USER
  OTHER
}

Enum PlatformType {
  WEB
  ANDROID
  IOS
}

Enum WebhookEventStatus {
  PENDING
  PROCESSED
  FAILED
}

Enum ChangeFrequency {
  ALWAYS
  HOURLY
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
  NEVER
}

Enum CardType {
  FEATURED
  TRENDING
  NEW
  POPULAR
  RECOMMENDED
}

Enum PointRuleAction {
  BOOKING
  SIGNUP
  REFERRAL_SIGNUP
  REFERRAL_PURCHASE
  REVIEW_SUBMITTED
  BIRTHDAY_BONUS
  MANUAL_ADJUSTMENT
  LOGIN_STREAK
  SOCIAL_SHARE
}

Enum RewardPointStatus {
  ACTIVE
  REDEEMED
  EXPIRED
  ADJUSTED
}

Ref: accounts.userId > users.id [delete: Cascade]

Ref: user_roles.userId > users.id [delete: Cascade]

Ref: user_roles.roleId > roles.id [delete: Cascade]

Ref: role_permissions.roleId > roles.id [delete: Cascade]

Ref: role_permissions.permissionId > permissions.id [delete: Cascade]

Ref: login_history.userId > users.id [delete: Cascade]

Ref: categorys.parentId - categorys.id [delete: Cascade]

Ref: user_interest.userId > users.id

Ref: user_interest.categoryId > categorys.id

Ref: events.sellerId > users.id [delete: Cascade]

Ref: events.categoryId > categorys.id

Ref: seats.eventId > events.id [delete: Cascade]

Ref: bookings.userId > users.id [delete: Cascade]

Ref: bookings.seatId > seats.id [delete: Cascade]

Ref: transactions.payerId > users.id

Ref: transactions.payeeId > users.id

Ref: transactions.bookingId > bookings.id

Ref: transactions.eventId > events.id

Ref: transactions.parentTransactionId - transactions.id

Ref: transactions.approvedById > users.id

Ref: reviews.eventId > events.id [delete: Cascade]

Ref: reviews.reviewerId > users.id [delete: Cascade]

Ref: reviews.revieweeId > users.id [delete: Cascade]

Ref: message_rooms.senderId > users.id

Ref: message_rooms.receiverId > users.id

Ref: message_rooms.eventId > events.id

Ref: message_rooms.bookingId > bookings.id [delete: Cascade]

Ref: messages.roomId > message_rooms.id

Ref: messages.senderId > users.id

Ref: messages.receiverId > users.id

Ref: notifications.userId > users.id

Ref: activity_log.userId > users.id

Ref: seller_verifications.sellerId > users.id

Ref: business_info.sellerId - users.id [delete: Cascade]

Ref: notifications_settings.userId - users.id [delete: Cascade]

Ref: blog.authorId > users.id

Ref: blog.seoId - SeoMetadata.id

Ref: withdrawal_requests.sellerId > users.id

Ref: withdrawal_requests.approvedById > users.id

Ref: helpfaqs.blogId > blog.id

Ref: feedback.userId > users.id [delete: Cascade]

Ref: dynamicPage.seoId - SeoMetadata.id

Ref: RewardPoints.userId > users.id

Ref: RewardPoints.ruleId > PointRule.id

Ref: Redemption.userId > users.id

Ref: UserLoyalty.userId - users.id

Ref: UserLoyalty.tierId > LoyaltyTier.id

Ref: TierHistory.userId > users.id

Ref: wishlist_items.userId > users.id

Ref: wishlist_items.eventId > events.id